name: CI Pipeline

on:
  push:
    branches:
      - sangwang
  pull_request:
    branches:
      - sangwang

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Setup Metrics Directory
        run: mkdir -p metrics

      - name: Start Tracking Time
        id: start_time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Install Dependencies and Build Frontend
        run: |
          cd eCommerce
          node -v  # Kiểm tra Node.js version
          npm -v   # Kiểm tra npm version
          npm install --legacy-peer-deps
          npm test --passWithNoTests || true
          CI=false npm run build

      - name: Calculate Build Duration
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "$DURATION" > eCommerce/metrics/frontend-build.txt

      - name: Generate Pipeline Report
        run: |
          echo "Pipeline Report" > pipeline-report.md
          echo "===============" >> pipeline-report.md
          echo "Frontend Build: $(cat eCommerce/metrics/frontend-build.txt) seconds" >> pipeline-report.md

      - name: Monitor Resources
        run: |
          CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
          MEM_USAGE=$(free -m | awk 'NR==2{printf "%.2f", $3*100/$2 }')
          DISK_USAGE=$(df -h / | awk 'NR==2{print $5}')
          echo "CPU: $CPU_USAGE%" > eCommerce/metrics/resources.txt
          echo "Memory: $MEM_USAGE%" >> eCommerce/metrics/resources.txt
          echo "Disk: $DISK_USAGE" >> eCommerce/metrics/resources.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-metrics
          path: |
            eCommerce/metrics/
            pipeline-report.md
